;; Analyzed by ClojureScript 1.7.122
{:use-macros nil, :excludes #{}, :name robot-overlord.core, :imports nil, :requires {string clojure.string, clojure.string clojure.string, om om.core, om.core om.core, dom om.dom, om.dom om.dom}, :uses nil, :defs {t_robot_overlord$core20148 {:num-fields 9, :protocols #{om.core/IRender om.core/IDidUpdate cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name robot-overlord.core/t_robot_overlord$core20148, :file "src/robot_overlord/core.cljs", :type true, :anonymous true, :column 6, :line 117, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, in-duration {:protocol-inline nil, :meta {:file "/Users/expede/Documents/Work/Robot Overlord/Website/robot-overlord.github.io/src/robot_overlord/core.cljs", :line 21, :column 7, :end-line 21, :end-column 18, :arglists (quote ([duration count f])), :doc "Correct duration to make whole sequence last the specified number of milliseconds"}, :name robot-overlord.core/in-duration, :variadic false, :file "src/robot_overlord/core.cljs", :end-column 18, :method-params ([duration count f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 3, :fn-var true, :arglists (quote ([duration count f])), :doc "Correct duration to make whole sequence last the specified number of milliseconds"}, start-cycle {:protocol-inline nil, :meta {:file "/Users/expede/Documents/Work/Robot Overlord/Website/robot-overlord.github.io/src/robot_overlord/core.cljs", :line 11, :column 7, :end-line 11, :end-column 18, :arglists (quote ([owner])), :doc "Start the render cycle"}, :name robot-overlord.core/start-cycle, :variadic false, :file "src/robot_overlord/core.cljs", :end-column 18, :method-params ([owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([owner])), :doc "Start the render cycle"}, delay-start-print! {:protocol-inline nil, :meta {:file "/Users/expede/Documents/Work/Robot Overlord/Website/robot-overlord.github.io/src/robot_overlord/core.cljs", :line 35, :column 7, :end-line 35, :end-column 25, :arglists (quote ([cursor delay key])), :doc "Wait a period of time before setting the state to printable"}, :name robot-overlord.core/delay-start-print!, :variadic false, :file "src/robot_overlord/core.cljs", :end-column 25, :method-params ([cursor delay key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 3, :fn-var true, :arglists (quote ([cursor delay key])), :doc "Wait a period of time before setting the state to printable"}, ->t_robot_overlord$core20140 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender om.core/IDidUpdate cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([p__20135 owner map__20136 logotype map__20138 text remain subhead-visible printable meta20141])), :file nil}, :protocols #{om.core/IRender om.core/IDidUpdate cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name robot-overlord.core/->t_robot_overlord$core20140, :variadic false, :file "src/robot_overlord/core.cljs", :method-params ([p__20135 owner map__20136 logotype map__20138 text remain subhead-visible printable meta20141]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 6, :factory :positional, :line 95, :max-fixed-arity 10, :fn-var true, :arglists (quote ([p__20135 owner map__20136 logotype map__20138 text remain subhead-visible printable meta20141])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-visible! {:protocol-inline nil, :meta {:file "/Users/expede/Documents/Work/Robot Overlord/Website/robot-overlord.github.io/src/robot_overlord/core.cljs", :line 16, :column 7, :end-line 16, :end-column 20, :arglists (quote ([cursor visibility-key])), :doc "Set visibility state of some element to true"}, :name robot-overlord.core/make-visible!, :variadic false, :file "src/robot_overlord/core.cljs", :end-column 20, :method-params ([cursor visibility-key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cursor visibility-key])), :doc "Set visibility state of some element to true"}, oldschool {:protocol-inline nil, :meta {:file "/Users/expede/Documents/Work/Robot Overlord/Website/robot-overlord.github.io/src/robot_overlord/core.cljs", :line 75, :column 7, :end-line 75, :end-column 16, :arglists (quote ([text & [{:keys [dropcap]}]])), :doc "Text with a blinking cursor", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(text [{:keys [dropcap]}])], :arglists ([text & [{:keys [dropcap]}]]), :arglists-meta (nil)}}, :name robot-overlord.core/oldschool, :variadic true, :file "src/robot_overlord/core.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(text [{:keys [dropcap]}])], :arglists ([text & [{:keys [dropcap]}]]), :arglists-meta (nil)}, :method-params [(text [{:keys [dropcap]}])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 1, :fn-var true, :arglists ([text & [{:keys [dropcap]}]]), :doc "Text with a blinking cursor"}, state->state! {:protocol-inline nil, :meta {:file "/Users/expede/Documents/Work/Robot Overlord/Website/robot-overlord.github.io/src/robot_overlord/core.cljs", :line 41, :column 7, :end-line 41, :end-column 20, :arglists (quote ([cursor printable current target init-delay duration])), :doc "Run the state"}, :name robot-overlord.core/state->state!, :variadic false, :file "src/robot_overlord/core.cljs", :end-column 20, :method-params ([cursor printable current target init-delay duration]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 6, :fn-var true, :arglists (quote ([cursor printable current target init-delay duration])), :doc "Run the state"}, t_robot_overlord$core20156 {:num-fields 9, :protocols #{om.core/IRender om.core/IDidUpdate cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name robot-overlord.core/t_robot_overlord$core20156, :file "src/robot_overlord/core.cljs", :type true, :anonymous true, :column 6, :line 133, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, string->printable {:protocol-inline nil, :meta {:file "/Users/expede/Documents/Work/Robot Overlord/Website/robot-overlord.github.io/src/robot_overlord/core.cljs", :line 49, :column 7, :end-line 49, :end-column 24, :arglists (quote ([[head & tail]])), :doc "Convert string to a zipper representation (for state)"}, :name robot-overlord.core/string->printable, :variadic false, :file "src/robot_overlord/core.cljs", :end-column 24, :method-params ([p__20120]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[head & tail]])), :doc "Convert string to a zipper representation (for state)"}, ->t_robot_overlord$core20148 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender om.core/IDidUpdate cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([p__20143 owner map__20144 what-we-do map__20146 text remain printable meta20149])), :file nil}, :protocols #{om.core/IRender om.core/IDidUpdate cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name robot-overlord.core/->t_robot_overlord$core20148, :variadic false, :file "src/robot_overlord/core.cljs", :method-params ([p__20143 owner map__20144 what-we-do map__20146 text remain printable meta20149]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 6, :factory :positional, :line 117, :max-fixed-arity 9, :fn-var true, :arglists (quote ([p__20143 owner map__20144 what-we-do map__20146 text remain printable meta20149])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_robot_overlord$core20156 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender om.core/IDidUpdate cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([p__20151 owner map__20152 who-we-are map__20154 text remain printable meta20157])), :file nil}, :protocols #{om.core/IRender om.core/IDidUpdate cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name robot-overlord.core/->t_robot_overlord$core20156, :variadic false, :file "src/robot_overlord/core.cljs", :method-params ([p__20151 owner map__20152 who-we-are map__20154 text remain printable meta20157]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 6, :factory :positional, :line 133, :max-fixed-arity 9, :fn-var true, :arglists (quote ([p__20151 owner map__20152 who-we-are map__20154 text remain printable meta20157])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, dropcap-sentence {:protocol-inline nil, :meta {:file "/Users/expede/Documents/Work/Robot Overlord/Website/robot-overlord.github.io/src/robot_overlord/core.cljs", :line 68, :column 7, :end-line 68, :end-column 23, :arglists (quote ([[first & rest :as text]])), :doc "Dropcap first letter of a sentence"}, :name robot-overlord.core/dropcap-sentence, :variadic false, :file "src/robot_overlord/core.cljs", :end-column 23, :method-params ([p__20123]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[first & rest :as text]])), :doc "Dropcap first letter of a sentence"}, ->t_robot_overlord$core20164 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender om.core/IDidUpdate cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([p__20159 owner map__20160 contact map__20162 text remain printable meta20165])), :file nil}, :protocols #{om.core/IRender om.core/IDidUpdate cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name robot-overlord.core/->t_robot_overlord$core20164, :variadic false, :file "src/robot_overlord/core.cljs", :method-params ([p__20159 owner map__20160 contact map__20162 text remain printable meta20165]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 6, :factory :positional, :line 149, :max-fixed-arity 9, :fn-var true, :arglists (quote ([p__20159 owner map__20160 contact map__20162 text remain printable meta20165])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, app-state {:name robot-overlord.core/app-state, :file "src/robot_overlord/core.cljs", :line 59, :column 1, :end-line 59, :end-column 19, :meta {:file "/Users/expede/Documents/Work/Robot Overlord/Website/robot-overlord.github.io/src/robot_overlord/core.cljs", :line 59, :column 10, :end-line 59, :end-column 19}}, t_robot_overlord$core20164 {:num-fields 9, :protocols #{om.core/IRender om.core/IDidUpdate cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name robot-overlord.core/t_robot_overlord$core20164, :file "src/robot_overlord/core.cljs", :type true, :anonymous true, :column 6, :line 149, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, scan-title {:protocol-inline nil, :meta {:file "/Users/expede/Documents/Work/Robot Overlord/Website/robot-overlord.github.io/src/robot_overlord/core.cljs", :line 82, :column 7, :end-line 82, :end-column 17, :arglists (quote ([title])), :doc "Scanline-style titles"}, :name robot-overlord.core/scan-title, :variadic false, :file "src/robot_overlord/core.cljs", :end-column 17, :method-params ([title]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 1, :fn-var true, :arglists (quote ([title])), :doc "Scanline-style titles"}, zip-step! {:protocol-inline nil, :meta {:file "/Users/expede/Documents/Work/Robot Overlord/Website/robot-overlord.github.io/src/robot_overlord/core.cljs", :line 27, :column 7, :end-line 27, :end-column 16, :arglists (quote ([duration cursor current target])), :doc "Move the text zipper one iteration forward"}, :name robot-overlord.core/zip-step!, :variadic false, :file "src/robot_overlord/core.cljs", :end-column 16, :method-params ([duration cursor current target]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 4, :fn-var true, :arglists (quote ([duration cursor current target])), :doc "Move the text zipper one iteration forward"}, t_robot_overlord$core20140 {:num-fields 10, :protocols #{om.core/IRender om.core/IDidUpdate cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name robot-overlord.core/t_robot_overlord$core20140, :file "src/robot_overlord/core.cljs", :type true, :anonymous true, :column 6, :line 95, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {om om.core, om.core om.core, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{p__20151 map__20138 logotype map__20152 contact :printable owner remain text :else :subhead-visible map__20144 :who-we-are :what-we-do p__20135 meta20165 meta20157 printable meta20149 subhead-visible map__20160 who-we-are meta20141 what-we-do map__20146 p__20159 map__20154 map__20136 p__20143 :dropcap :target :logotype :contact map__20162 :remain :text}, :order [:text :remain :printable :subhead-visible :else :logotype :contact :who-we-are :what-we-do :dropcap p__20135 owner map__20136 logotype map__20138 text remain subhead-visible printable meta20141 :target p__20143 map__20144 what-we-do map__20146 meta20149 p__20151 map__20152 who-we-are map__20154 meta20157 p__20159 map__20160 contact map__20162 meta20165]}, :doc nil}