var _krisajenkins$elm_exts$Exts_Maybe$when = F2(
	function (test, value) {
		return test ? _elm_lang$core$Maybe$Just(value) : _elm_lang$core$Maybe$Nothing;
	});
var _krisajenkins$elm_exts$Exts_Maybe$validate = F2(
	function (predicate, value) {
		return predicate(value) ? _elm_lang$core$Maybe$Just(value) : _elm_lang$core$Maybe$Nothing;
	});
var _krisajenkins$elm_exts$Exts_Maybe$matches = F2(
	function (predicate, maybe) {
		return A2(
			_elm_lang$core$Maybe$andThen,
			maybe,
			_krisajenkins$elm_exts$Exts_Maybe$validate(predicate));
	});
var _krisajenkins$elm_exts$Exts_Maybe$maybeDefault = F2(
	function ($default, x) {
		var _p0 = x;
		if (_p0.ctor === 'Just') {
			return _elm_lang$core$Maybe$Just(_p0._0);
		} else {
			return _elm_lang$core$Maybe$Just($default);
		}
	});
var _krisajenkins$elm_exts$Exts_Maybe$join = F3(
	function (f, left, right) {
		var _p1 = {ctor: '_Tuple2', _0: left, _1: right};
		if (((_p1.ctor === '_Tuple2') && (_p1._0.ctor === 'Just')) && (_p1._1.ctor === 'Just')) {
			return _elm_lang$core$Maybe$Just(
				A2(f, _p1._0._0, _p1._1._0));
		} else {
			return _elm_lang$core$Maybe$Nothing;
		}
	});
var _krisajenkins$elm_exts$Exts_Maybe$catMaybes = function (xs) {
	catMaybes:
	while (true) {
		var _p2 = xs;
		if (_p2.ctor === '[]') {
			return _elm_lang$core$Native_List.fromArray(
				[]);
		} else {
			if (_p2._0.ctor === 'Nothing') {
				var _v3 = _p2._1;
				xs = _v3;
				continue catMaybes;
			} else {
				return A2(
					_elm_lang$core$List_ops['::'],
					_p2._0._0,
					_krisajenkins$elm_exts$Exts_Maybe$catMaybes(_p2._1));
			}
		}
	}
};
var _krisajenkins$elm_exts$Exts_Maybe$mappend = F2(
	function (a, b) {
		var _p3 = {ctor: '_Tuple2', _0: a, _1: b};
		if (_p3._0.ctor === 'Nothing') {
			return _elm_lang$core$Maybe$Nothing;
		} else {
			if (_p3._1.ctor === 'Nothing') {
				return _elm_lang$core$Maybe$Nothing;
			} else {
				return _elm_lang$core$Maybe$Just(
					{ctor: '_Tuple2', _0: _p3._0._0, _1: _p3._1._0});
			}
		}
	});
var _krisajenkins$elm_exts$Exts_Maybe$maybe = F2(
	function ($default, f) {
		return function (_p4) {
			return A2(
				_elm_lang$core$Maybe$withDefault,
				$default,
				A2(_elm_lang$core$Maybe$map, f, _p4));
		};
	});
var _krisajenkins$elm_exts$Exts_Maybe$isJust = function (x) {
	var _p5 = x;
	if (_p5.ctor === 'Just') {
		return true;
	} else {
		return false;
	}
};
var _krisajenkins$elm_exts$Exts_Maybe$isNothing = function (_p6) {
	return _elm_lang$core$Basics$not(
		_krisajenkins$elm_exts$Exts_Maybe$isJust(_p6));
};
