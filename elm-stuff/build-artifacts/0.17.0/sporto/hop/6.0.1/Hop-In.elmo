var _sporto$hop$Hop_In$removeBase = F2(
	function (config, pathWithQuery) {
		var regex = _elm_lang$core$Regex$regex(config.basePath);
		return A4(
			_elm_lang$core$Regex$replace,
			_elm_lang$core$Regex$AtMost(1),
			regex,
			_elm_lang$core$Basics$always(''),
			pathWithQuery);
	});
var _sporto$hop$Hop_In$getRelevantPathWithQuery = F2(
	function (config, href) {
		return config.hash ? A2(
			_elm_lang$core$Maybe$withDefault,
			'',
			_elm_lang$core$List$head(
				A2(
					_elm_lang$core$List$drop,
					1,
					A2(_elm_lang$core$String$split, '#', href)))) : A2(
			_sporto$hop$Hop_In$removeBase,
			config,
			A2(
				_elm_lang$core$Maybe$withDefault,
				'',
				_elm_lang$core$List$head(
					A2(_elm_lang$core$String$split, '#', href))));
	});
var _sporto$hop$Hop_In$removeDomain = function (href) {
	return A2(
		_elm_lang$core$String$append,
		'/',
		A2(
			_elm_lang$core$String$join,
			'/',
			A2(
				_elm_lang$core$Maybe$withDefault,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$List$tail(
					A2(_elm_lang$core$String$split, '/', href)))));
};
var _sporto$hop$Hop_In$removeProtocol = function (href) {
	return A2(
		_elm_lang$core$Maybe$withDefault,
		'',
		_elm_lang$core$List$head(
			_elm_lang$core$List$reverse(
				A2(_elm_lang$core$String$split, '//', href))));
};
var _sporto$hop$Hop_In$ingest = F2(
	function (config, href) {
		return _sporto$hop$Hop_Address$parse(
			A2(
				_sporto$hop$Hop_In$getRelevantPathWithQuery,
				config,
				_sporto$hop$Hop_In$removeDomain(
					_sporto$hop$Hop_In$removeProtocol(href))));
	});
