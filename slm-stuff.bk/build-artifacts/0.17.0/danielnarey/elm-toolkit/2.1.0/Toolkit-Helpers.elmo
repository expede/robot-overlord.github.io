var _danielnarey$elm_toolkit$Toolkit_Helpers$applyList = F2(
	function (fList, data) {
		var getNextResult = function (_p0) {
			var _p1 = _p0;
			var _p2 = _elm_lang$core$List$head(_p1._1);
			if (_p2.ctor === 'Just') {
				return _elm_lang$core$Native_List.fromArray(
					[
						_p2._0(_p1._0)
					]);
			} else {
				return _elm_lang$core$Native_List.fromArray(
					[]);
			}
		};
		var applyNextFun = F2(
			function (_p3, resultList) {
				applyNextFun:
				while (true) {
					var _p4 = _p3;
					var _p7 = _p4._0;
					var _p5 = _p4._1;
					if (_p5.ctor === 'Just') {
						var _p6 = _p5._0;
						var _v4 = {
							ctor: '_Tuple2',
							_0: _p7,
							_1: _elm_lang$core$List$tail(_p6)
						},
							_v5 = A2(
							F2(
								function (x, y) {
									return A2(_elm_lang$core$Basics_ops['++'], x, y);
								}),
							resultList,
							getNextResult(
								{ctor: '_Tuple2', _0: _p7, _1: _p6}));
						_p3 = _v4;
						resultList = _v5;
						continue applyNextFun;
					} else {
						return resultList;
					}
				}
			});
		return A2(
			applyNextFun,
			{
				ctor: '_Tuple2',
				_0: data,
				_1: _elm_lang$core$Maybe$Just(fList)
			},
			_elm_lang$core$Native_List.fromArray(
				[]));
	});
var _danielnarey$elm_toolkit$Toolkit_Helpers$apply4 = F2(
	function (_p8, a) {
		var _p9 = _p8;
		return {
			ctor: '_Tuple4',
			_0: _p9._0(a),
			_1: _p9._1(a),
			_2: _p9._2(a),
			_3: _p9._3(a)
		};
	});
var _danielnarey$elm_toolkit$Toolkit_Helpers$apply3 = F2(
	function (_p10, a) {
		var _p11 = _p10;
		return {
			ctor: '_Tuple3',
			_0: _p11._0(a),
			_1: _p11._1(a),
			_2: _p11._2(a)
		};
	});
var _danielnarey$elm_toolkit$Toolkit_Helpers$apply2 = F2(
	function (_p12, a) {
		var _p13 = _p12;
		return {
			ctor: '_Tuple2',
			_0: _p13._0(a),
			_1: _p13._1(a)
		};
	});
var _danielnarey$elm_toolkit$Toolkit_Helpers$uncurry4 = F2(
	function (f, _p14) {
		var _p15 = _p14;
		return A4(f, _p15._0, _p15._1, _p15._2, _p15._3);
	});
var _danielnarey$elm_toolkit$Toolkit_Helpers$uncurry3 = F2(
	function (f, _p16) {
		var _p17 = _p16;
		return A3(f, _p17._0, _p17._1, _p17._2);
	});
var _danielnarey$elm_toolkit$Toolkit_Helpers$curry4 = F5(
	function (f, a, b, c, d) {
		return f(
			{ctor: '_Tuple4', _0: a, _1: b, _2: c, _3: d});
	});
var _danielnarey$elm_toolkit$Toolkit_Helpers$curry3 = F4(
	function (f, a, b, c) {
		return f(
			{ctor: '_Tuple3', _0: a, _1: b, _2: c});
	});
var _danielnarey$elm_toolkit$Toolkit_Helpers$fth4 = function (_p18) {
	var _p19 = _p18;
	return _p19._3;
};
var _danielnarey$elm_toolkit$Toolkit_Helpers$trd4 = function (_p20) {
	var _p21 = _p20;
	return _p21._2;
};
var _danielnarey$elm_toolkit$Toolkit_Helpers$snd4 = function (_p22) {
	var _p23 = _p22;
	return _p23._1;
};
var _danielnarey$elm_toolkit$Toolkit_Helpers$fst4 = function (_p24) {
	var _p25 = _p24;
	return _p25._0;
};
var _danielnarey$elm_toolkit$Toolkit_Helpers$trd3 = function (_p26) {
	var _p27 = _p26;
	return _p27._2;
};
var _danielnarey$elm_toolkit$Toolkit_Helpers$snd3 = function (_p28) {
	var _p29 = _p28;
	return _p29._1;
};
var _danielnarey$elm_toolkit$Toolkit_Helpers$fst3 = function (_p30) {
	var _p31 = _p30;
	return _p31._0;
};
var _danielnarey$elm_toolkit$Toolkit_Helpers$zip4 = function (_p32) {
	var _p33 = _p32;
	return A5(
		_elm_lang$core$List$map4,
		F4(
			function (a, b, c, d) {
				return {ctor: '_Tuple4', _0: a, _1: b, _2: c, _3: d};
			}),
		_p33._0,
		_p33._1,
		_p33._2,
		_p33._3);
};
var _danielnarey$elm_toolkit$Toolkit_Helpers$zip3 = function (_p34) {
	var _p35 = _p34;
	return A4(
		_elm_lang$core$List$map3,
		F3(
			function (a, b, c) {
				return {ctor: '_Tuple3', _0: a, _1: b, _2: c};
			}),
		_p35._0,
		_p35._1,
		_p35._2);
};
var _danielnarey$elm_toolkit$Toolkit_Helpers$zip = function (_p36) {
	var _p37 = _p36;
	return A3(
		_elm_lang$core$List$map2,
		F2(
			function (v0, v1) {
				return {ctor: '_Tuple2', _0: v0, _1: v1};
			}),
		_p37._0,
		_p37._1);
};
var _danielnarey$elm_toolkit$Toolkit_Helpers$unzip4 = function (_p38) {
	var _p39 = _p38;
	return A5(
		_elm_lang$core$List$map4,
		F4(
			function (a, b, c, d) {
				return {ctor: '_Tuple4', _0: a, _1: b, _2: c, _3: d};
			}),
		_p39._0,
		_p39._1,
		_p39._2,
		_p39._3);
};
var _danielnarey$elm_toolkit$Toolkit_Helpers$unzip3 = function (_p40) {
	var _p41 = _p40;
	return A4(
		_elm_lang$core$List$map3,
		F3(
			function (a, b, c) {
				return {ctor: '_Tuple3', _0: a, _1: b, _2: c};
			}),
		_p41._0,
		_p41._1,
		_p41._2);
};
var _danielnarey$elm_toolkit$Toolkit_Helpers$getNth = F2(
	function (n, list) {
		return (_elm_lang$core$Native_Utils.cmp(n, 0) < 0) ? _elm_lang$core$Maybe$Nothing : _elm_lang$core$List$head(
			A2(_elm_lang$core$List$drop, n, list));
	});
var _danielnarey$elm_toolkit$Toolkit_Helpers$wrapList = function (a) {
	return _elm_lang$core$Native_List.fromArray(
		[a]);
};
var _danielnarey$elm_toolkit$Toolkit_Helpers$maybe4Tuple = function (tuple) {
	var _p42 = tuple;
	if (((((_p42.ctor === '_Tuple4') && (_p42._0.ctor === 'Just')) && (_p42._1.ctor === 'Just')) && (_p42._2.ctor === 'Just')) && (_p42._3.ctor === 'Just')) {
		return _elm_lang$core$Maybe$Just(
			{ctor: '_Tuple4', _0: _p42._0._0, _1: _p42._1._0, _2: _p42._2._0, _3: _p42._3._0});
	} else {
		return _elm_lang$core$Maybe$Nothing;
	}
};
var _danielnarey$elm_toolkit$Toolkit_Helpers$take4Tuple = function (list) {
	return _danielnarey$elm_toolkit$Toolkit_Helpers$maybe4Tuple(
		A2(
			_danielnarey$elm_toolkit$Toolkit_Helpers$apply4,
			{
				ctor: '_Tuple4',
				_0: _danielnarey$elm_toolkit$Toolkit_Helpers$getNth(0),
				_1: _danielnarey$elm_toolkit$Toolkit_Helpers$getNth(1),
				_2: _danielnarey$elm_toolkit$Toolkit_Helpers$getNth(2),
				_3: _danielnarey$elm_toolkit$Toolkit_Helpers$getNth(3)
			},
			list));
};
var _danielnarey$elm_toolkit$Toolkit_Helpers$maybe3Tuple = function (tuple) {
	var _p43 = tuple;
	if ((((_p43.ctor === '_Tuple3') && (_p43._0.ctor === 'Just')) && (_p43._1.ctor === 'Just')) && (_p43._2.ctor === 'Just')) {
		return _elm_lang$core$Maybe$Just(
			{ctor: '_Tuple3', _0: _p43._0._0, _1: _p43._1._0, _2: _p43._2._0});
	} else {
		return _elm_lang$core$Maybe$Nothing;
	}
};
var _danielnarey$elm_toolkit$Toolkit_Helpers$take3Tuple = function (list) {
	return _danielnarey$elm_toolkit$Toolkit_Helpers$maybe3Tuple(
		A2(
			_danielnarey$elm_toolkit$Toolkit_Helpers$apply3,
			{
				ctor: '_Tuple3',
				_0: _danielnarey$elm_toolkit$Toolkit_Helpers$getNth(0),
				_1: _danielnarey$elm_toolkit$Toolkit_Helpers$getNth(1),
				_2: _danielnarey$elm_toolkit$Toolkit_Helpers$getNth(2)
			},
			list));
};
var _danielnarey$elm_toolkit$Toolkit_Helpers$maybe2Tuple = function (tuple) {
	var _p44 = tuple;
	if (((_p44.ctor === '_Tuple2') && (_p44._0.ctor === 'Just')) && (_p44._1.ctor === 'Just')) {
		return _elm_lang$core$Maybe$Just(
			{ctor: '_Tuple2', _0: _p44._0._0, _1: _p44._1._0});
	} else {
		return _elm_lang$core$Maybe$Nothing;
	}
};
var _danielnarey$elm_toolkit$Toolkit_Helpers$take2Tuple = function (list) {
	return _danielnarey$elm_toolkit$Toolkit_Helpers$maybe2Tuple(
		A2(
			_danielnarey$elm_toolkit$Toolkit_Helpers$apply2,
			{
				ctor: '_Tuple2',
				_0: _danielnarey$elm_toolkit$Toolkit_Helpers$getNth(0),
				_1: _danielnarey$elm_toolkit$Toolkit_Helpers$getNth(1)
			},
			list));
};
var _danielnarey$elm_toolkit$Toolkit_Helpers$thenTry = F2(
	function (callback, result) {
		return A2(_elm_lang$core$Result$andThen, result, callback);
	});
var _danielnarey$elm_toolkit$Toolkit_Helpers$toBool = function (boolString) {
	var _p45 = _elm_lang$core$String$toLower(boolString);
	switch (_p45) {
		case 'true':
			return _elm_lang$core$Result$Ok(true);
		case 'false':
			return _elm_lang$core$Result$Ok(false);
		default:
			return _elm_lang$core$Result$Err('String argument must be \'true\' or \'false\' (case ignored)');
	}
};
